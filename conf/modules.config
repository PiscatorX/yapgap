/*
~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~
    Config file for defining DSL2 per module options and publishing paths
~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~
    Available keys to override module options:
        ext.args   = Additional arguments appended to command in module.
        ext.args2  = Second set of arguments appended to command in module (multi-tool modules).
        ext.args3  = Third set of arguments appended to command in module (multi-tool modules).
        ext.prefix = File name prefix for output files.
----------------------------------------------------------------------------------------
*/

process {

    publishDir = [
        path: { "${params.outdir}/processing/${task.process.tokenize(':')[-1].tokenize('_')[0].toLowerCase()}" },
        mode: params.publish_dir_mode,
        saveAs: { filename -> filename.equals('versions.yml') ? null : filename }]

    withName: HISAT2_BUILD{
    
      storeDir =  "${params.db_ref}/"
   }


   //  withName: STRINGTIE_MERGE{
   //   storeDir =  "${params.db_ref}/Stringtie"
   // }


   withName: 'YAPGAP_WORKFLOW:YAPGAP:RNASEQ_ALIGN:FASTQ_ALIGN_HISAT2:BAM_SORT_STATS_SAMTOOLS:SAMTOOLS_SORT' {

            ext.prefix = { "${meta.id}.sorted.bam" }
            publishDir = [
                path: { "${params.outdir}/${params.aligner}/samtools_stats" }]}


  withName: BLAST_TBLASTN{
    
     ext.args = { [                                              
            '-evalue 1e-10',
	    '-max_target_seqs 1',
	    '-outfmt 6'
	    ].join(' ') }

      publishDir = [
            path: { "${params.outdir}/Blast" },
            mode: params.publish_dir_mode
	    ]
	    
    }

  withName: 'BLAST_BLASTP'{
    
     ext.args = { [                                              
            '-evalue 1e-5',
	    '-max_target_seqs 1',
	    ].join(' ') }

      publishDir = [
            path: { "${params.outdir}/Blast" },
            mode: params.publish_dir_mode
	    ]
	    
    }


    withName: 'YAPGAP_WORKFLOW:YAPGAP:TRANSDECODER:CLEAN_GTF'{
    
    container = null

    }


    withName:'BLAST_TBLASTN'{

    storeDir =  "${params.db_ref}/TBLASTN/"

    }
   

    withName:'YAPGAP_WORKFLOW:YAPGAP:TRANSDECODER:BLAST_MAKEBLASTDB'{

    storeDir =  "${params.db_ref}/"
    
    ext.args = { [                                              
            '-dbtype prot'
	    ].join(' ') }
	    
   }


    withName: 'BLAST_MAKEBLASTDB'{

    storeDir =  "${params.db_ref}/BlastDB/"

    ext.args = { [                                              
            '-dbtype nucl'
	    ].join(' ') }

    }

    
    withName: BRAKER{

    container = "${params.braker3_apptainer}"
    
    }


    withName:'SATSUMA2_SATSUMASYNTENY2'{

      ext.args = { [                                              
            '-km_sync 0'
	    ].join(' ') }
    
    }
    

    withName: 'SPALN_MAKEINDEX'{

    storeDir =  "${params.db_ref}/Spaln/"


    }


}



	